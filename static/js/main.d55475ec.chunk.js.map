{"version":3,"sources":["PostRegister.js","GetData.js","PostLogin.js","Error.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["PostRegister","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","setState","message","data","qs","stringify","username","state","password","axios","post","Content-Type","then","response","status","code","catch","error","console","log","handleInputChange","defineProperty","target","name","value","_this$state","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","onClick","Component","GetData","load","token","url","checkNumber","query","size","page","document","cookie","config","headers","Auth-Token","get","result","items","payload","Cookie","set","expires","input","updateQuery","bind","map","key","nim_jur","nim_tpb","prodi","PostLogin","src_GetData","Error","Navigation","react_router_dom","to","App","current","src_Navigation","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d55475ec.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nclass PostRegister extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({message : 'Loading'})\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/register';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {username, password} = this.state;\r\n        return(\r\n            <div className =\"titlesec\">\r\n                <h2>\r\n                    Register\r\n                </h2>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>\r\n                        <input type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <input type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <button onClick={this.handleSubmit}>Register</button>\r\n                    </p>\r\n\r\n                    <br>\r\n                    </br>\r\n\r\n                    <p>\r\n                        {this.state.message}\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostRegister;","import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nimport Cookie from 'js-cookie'\r\n\r\nclass GetData extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        items : [],\r\n        load : true,\r\n        query : \"\",\r\n        size : 0,\r\n        page : 0,\r\n        token : this.props.token,\r\n        code : 0,\r\n        message : ''\r\n      }\r\n\r\n      Cookie.set('token', this.state.token, {expires : 1});\r\n    }\r\n\r\n    checkNumber(input){\r\n      return (input === \"1\" || input === \"2\" || input === \"3\" || input === \"4\" || input === \"5\" || input === \"6\" || input === \"7\" || input === \"8\" || input === \"9\" || input === \"0\");\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.setState({load : false, message : ''});\r\n\r\n      console.log(this.state.token);\r\n\r\n      let url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/'\r\n\r\n      if(this.checkNumber(this.state.query[0])){\r\n        url += 'byid?query=' + this.state.query \r\n      }\r\n      else{\r\n        url += 'byname?name=' + this.state.query\r\n      }\r\n\r\n      if(this.state.size > 0){\r\n        url += '&count=' + this.state.size\r\n      }\r\n\r\n      if(this.state.page > 0){\r\n        url += '&page=' + this.state.page\r\n      }\r\n\r\n      console.log(document.cookie)\r\n\r\n      const config = {\r\n        headers : {\r\n          'Auth-Token' : this.state.token\r\n        }\r\n      };\r\n\r\n      axios.get(url, config)\r\n      .then(result => { \r\n        console.log(result.data);\r\n        this.setState({\r\n          message : result.data.status,\r\n          code : result.data.code,\r\n          items : result.data.payload,\r\n          load : true\r\n        })\r\n      })\r\n    }\r\n  \r\n    updateQuery(event){\r\n      this.setState({query : event.target.value});\r\n    }\r\n    \r\n    render(){\r\n      var {load, items, code} = this.state;\r\n  \r\n      if(!load){\r\n        return (\r\n          <div className=\"titlesec\">\r\n            <h1>NIM Finder</h1>\r\n\r\n            <div className=\"queryStyle\">\r\n              Loading Data...\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{\r\n        if(code >= 0){\r\n          return (\r\n            <div className=\"titlesec\">\r\n              <h1>NIM Finder</h1>\r\n    \r\n              <div className=\"search\">\r\n                <input type=\"text\" name=\"query\" placeholder=\"Masukkan Nama/NIM\" onChange={this.updateQuery.bind(this)} />\r\n                <button onClick={this.handleSubmit}>Search</button>\r\n              </div>\r\n\r\n              <div className=\"queryStyle\">\r\n                  <ul>\r\n                    {items.map(data => (\r\n                      <li key={data.nim_jur}>{data.name} | {data.nim_tpb} | {data.nim_jur} | {data.prodi}</li>\r\n                    ))}\r\n                  </ul>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        else{\r\n          return (\r\n            <div className = \"titlesec\">\r\n              <h1>NIM Finder</h1>\r\n\r\n              <div className = \"queryStyle\">\r\n                <p>Cannot Load Data</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default GetData;\r\n  ","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nimport GetData from './GetData'\r\n\r\nclass PostLogin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : '',\r\n            token : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({message : 'Loading...'})\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/login';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code,\r\n                        token : response.data.token\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {username, password} = this.state;\r\n        \r\n        if(this.state.token === ''){\r\n            return(\r\n                <div className =\"titlesec\">\r\n                    <h2>\r\n                        Login\r\n                    </h2>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <p>\r\n                            <input type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                        </p>\r\n\r\n                        <p>\r\n                            <input type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                        </p>\r\n\r\n                        <p>\r\n                            <button onClick={this.handleSubmit}>Login</button>\r\n                        </p>\r\n\r\n                        <p>\r\n                            {this.state.message}\r\n                        </p>\r\n\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <GetData token={this.state.token} />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostLogin;","import React, {Component} from 'react';\r\n\r\nclass Error extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>404 Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to = \"/\"> Home </NavLink>\r\n            <NavLink to = \"/register\"> Register </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport PostRegister from './PostRegister'\nimport PostLogin from './PostLogin'\nimport Error from './Error'\nimport Navigation from './Navigation'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      current : 0,\n      cookie : '',\n      data : []\n    }\n  }\n\n  render(){\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={PostLogin} />\n            <Route path=\"/register\" component={PostRegister} />     \n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}