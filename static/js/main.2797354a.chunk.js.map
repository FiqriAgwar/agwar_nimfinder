{"version":3,"sources":["GetData.js","PostRegister.js","PostLogin.js","Error.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["GetData","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","state","load","url","checkNumber","query","size","page","header","Cookie","token","axios","get","then","result","code","setState","items","payload","codename","codeid","input","target","value","_this$state","react_default","a","createElement","className","type","name","placeholder","onChange","updateQuery","bind","onClick","map","data","key","nim_jur","nim_tpb","prodi","Component","PostRegister","message","qs","stringify","username","password","post","Content-Type","response","status","catch","error","console","log","handleInputChange","defineProperty","onSubmit","PostLogin","src_GetData","Error","Navigation","react_router_dom","to","App","current","cookie","src_Navigation","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2797354a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\n\r\nclass GetData extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        items : [],\r\n        load : true,\r\n        query : \"\",\r\n        size : 0,\r\n        page : 0,\r\n        token : props.token,\r\n        codename : -1,\r\n        codeid : -1\r\n      }\r\n    }\r\n\r\n    checkNumber(input){\r\n      return (input == \"1\" || input == \"2\" || input == \"3\" || input == \"4\" || input == \"5\" || input == \"6\" || input == \"7\" || input == \"8\" || input == \"9\" || input == \"0\");\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.state.load = false;\r\n\r\n      let url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/'\r\n\r\n      if(this.checkNumber(this.state.query[0])){\r\n        url += 'byid?query=' + this.state.query \r\n      }\r\n      else{\r\n        url += 'byname?name=' + this.state.query\r\n      }\r\n\r\n      if(this.state.size > 0){\r\n        url += '&count=' + this.state.size\r\n      }\r\n\r\n      if(this.state.page > 0){\r\n        url += '&page=' + this.state.page\r\n      }\r\n\r\n      const header = {\r\n        'Cookie' : 'token=' + this.state.token\r\n      }\r\n\r\n      axios.get(url, header)\r\n        .then(result => {\r\n            if(result.code >= 0){\r\n              this.setState(\r\n                {\r\n                  items : result.payload,\r\n                  load : true\r\n                }\r\n              )\r\n            }\r\n          }\r\n        )\r\n    }\r\n  \r\n    updateQuery(event){\r\n      this.setState({query : event.target.value});\r\n    }\r\n    \r\n    render(){\r\n      var {load, items, query} = this.state;\r\n  \r\n      if(!load){\r\n        return (\r\n          <div className=\"titlesec\">\r\n            <h1>NIM Finder</h1>\r\n\r\n            <div className=\"queryStyle\">\r\n              Loading Data...\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else{ \r\n        return (\r\n          <div className=\"titlesec\">\r\n            <h1>NIM Finder</h1>\r\n  \r\n            <div className=\"search\">\r\n              <input type=\"text\" name=\"query\" placeholder=\"Masukkan Nama/NIM\" onChange={this.updateQuery.bind(this)} />\r\n              <button onClick={this.handleSubmit}>Search</button>\r\n            </div>\r\n\r\n            <div className=\"queryStyle\">\r\n              <table>\r\n                <tr>\r\n                  {this.state.items.map(data => (\r\n                    <div>\r\n                      <td key={data.nim_jur}>{data.name}</td>\r\n                      <td key={data.nim_jur}>{data.nim_tpb}</td>\r\n                      <td key={data.nim_jur}>{data.nim_jur}</td>\r\n                      <td key={data.nim_jur}>{data.prodi}</td>\r\n                    </div>\r\n                  ))}\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default GetData;\r\n  ","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nclass PostRegister extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.state.message = 'Loading...';\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/register';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {username, password} = this.state;\r\n        return(\r\n            <div className =\"titlesec\">\r\n                <h2>\r\n                    Register\r\n                </h2>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>\r\n                        <input type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <input type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                    </p>\r\n\r\n                    <p>\r\n                        <button onClick={this.handleSubmit}>Register</button>\r\n                    </p>\r\n\r\n                    <br>\r\n                    </br>\r\n\r\n                    <p>\r\n                        {this.state.message}\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostRegister;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nimport GetData from './GetData'\r\n\r\nclass PostLogin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : '',\r\n            token : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.state.message = 'Loading...';\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/login';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code,\r\n                        token : response.data.token\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {username, password} = this.state;\r\n        \r\n        if(this.state.token == ''){\r\n            return(\r\n                <div className =\"titlesec\">\r\n                    <h2>\r\n                        Login\r\n                    </h2>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <p>\r\n                            <input type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                        </p>\r\n\r\n                        <p>\r\n                            <input type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                        </p>\r\n\r\n                        <p>\r\n                            <button onClick={this.handleSubmit}>Login</button>\r\n                        </p>\r\n\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <GetData token={this.state.token} />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostLogin;","import React, {Component} from 'react';\r\n\r\nclass Error extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>404 Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to = \"/\"> Home </NavLink>\r\n            <NavLink to = \"/register\"> Register </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport GetData from './GetData'\nimport PostRegister from './PostRegister'\nimport PostLogin from './PostLogin'\nimport Error from './Error'\nimport Navigation from './Navigation'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      current : 0,\n      cookie : '',\n      data : []\n    }\n  }\n\n  render(){\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={PostLogin} />\n            <Route path=\"/register\" component={PostRegister} />     \n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}