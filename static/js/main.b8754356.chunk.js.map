{"version":3,"sources":["component/PostRegister.js","component/PostLogin.js","component/DataTable.js","component/GetData.js","component/Error.js","App.js","serviceWorker.js","index.js"],"names":["PostRegister","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","setState","message","data","qs","stringify","username","state","password","axios","post","Content-Type","then","response","status","code","catch","error","console","log","handleInputChange","defineProperty","target","name","value","handleClick","linkToGo","_this$state","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","onClick","react_router","to","pathname","Component","PostLogin","token","undefined","DataTable","map","row","nim_tpb","nim_jur","prodi","GetData","load","url","checkNumber","query","size","page","document","cookie","config","headers","Auth-Token","get","result","items","payload","location","Cookie","set","expires","input","react_router_dom","exact","activeClassName","updateQuery","bind","updateSize","updatePage","component_DataTable","Error","App","src","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8754356.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nclass PostRegister extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : '',\r\n            linkToGo : null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({message : 'Loading'})\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/register';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({linkToGo : \"/login\"})\r\n    }\r\n\r\n    render(){\r\n        const {username, password, code, linkToGo} = this.state;\r\n        if(code !== 0){\r\n            if(linkToGo === null){\r\n                return(\r\n                    <div className =\"board\">\r\n                        <h2>\r\n                            Daftarkan Dirimu\r\n                        </h2>\r\n\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <p>\r\n                                <input className=\"querybar\" type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                            </p>\r\n\r\n                            <p>\r\n                                <input className=\"querybar\" type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                            </p>\r\n\r\n                            <p>\r\n                                <button className=\"btnone\" onClick={this.handleSubmit}>Register</button> \r\n                            </p>\r\n\r\n                            <p>\r\n                                atau Sudah Punya Akun?\r\n                            </p>\r\n\r\n                            <p>\r\n                                <button className=\"btntwo\" onClick={this.handleClick}>Go To Login</button>\r\n                            </p>\r\n\r\n                            <br>\r\n                            </br>\r\n\r\n                            <p>\r\n                                {this.state.message}\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <Redirect to={{\r\n                        pathname : '/login',\r\n                        state : {username}\r\n                    }}/>\r\n                )\r\n            }\r\n        }\r\n        else{\r\n            return(\r\n                <Redirect to={{\r\n                    pathname : '/login',\r\n                    state : {username}\r\n                }}/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostRegister;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nclass PostLogin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            code : '',\r\n            message : '',\r\n            token : '',\r\n            linkToGo : null,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({message : 'Loading...'})\r\n\r\n        const url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/login';\r\n\r\n        const data = qs.stringify({\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        });\r\n\r\n        const headers = {\r\n            'Content-Type' : 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        axios.post(url, data, headers)\r\n            .then(response => {\r\n                this.setState(\r\n                    {\r\n                        message : response.data.status,\r\n                        code : response.data.code,\r\n                        token : response.data.token\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({linkToGo : \"/register\"});\r\n    }\r\n\r\n    render(){\r\n        const {username, password, code, token, message, linkToGo} = this.state;\r\n        \r\n        if(token === undefined || token === '' || code !== 0){\r\n            if(linkToGo === null){    \r\n                return(\r\n                    <div className =\"board\">\r\n                        <h2>Login Dulu Ya</h2>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <p>\r\n                                <input className=\"querybar\" type = 'text' placeholder = 'Username' value = {username} name = 'username' onChange={this.handleInputChange} />\r\n                            </p>\r\n\r\n                            <p>\r\n                                <input className=\"querybar\" type = 'password' placeholder = 'password' value = {password} name = 'password' onChange={this.handleInputChange} />\r\n                            </p>\r\n\r\n                            <p>\r\n                                <button className=\"btnone\" onClick={this.handleSubmit}>Login</button> \r\n                            </p>\r\n\r\n                            <p>\r\n                                atau Belum Punya Akun?\r\n                            </p>\r\n\r\n                            <p>\r\n                                <button className=\"btntwo\" onClick={this.handleClick}>Go To Register</button>\r\n                            </p>\r\n\r\n                            <p>\r\n                                {message}\r\n                            </p>\r\n\r\n                        </form>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return (<Redirect to ={linkToGo} />)\r\n            }\r\n        }\r\n        else{\r\n            console.log(token);\r\n            return(\r\n                <Redirect to={{\r\n                    pathname : '/',\r\n                    state : {token, username}\r\n                }}/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostLogin;","import React from 'react'\r\n\r\nfunction DataTable(props){\r\n    return(\r\n        <table>\r\n            <thead className=\"tableheader\">\r\n                <tr>\r\n                    <th>Nama Mahasiswa</th>\r\n                    <th>NIM TPB</th>\r\n                    <th>NIM Jurusan</th>\r\n                    <th>Program Studi</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"tablebody\">\r\n                {\r\n                    props.data.map(row =>(\r\n                        <tr>\r\n                            <td>{row.name}</td>\r\n                            <td>{row.nim_tpb}</td>\r\n                            <td>{row.nim_jur}</td>\r\n                            <td>{row.prodi}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default DataTable;","import React, {Component} from 'react';\r\nimport {Redirect, NavLink} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Cookie from 'js-cookie'\r\nimport DataTable from './DataTable'\r\n\r\nclass GetData extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        items : [],\r\n        load : true,\r\n        query : \"\",\r\n        size : 0,\r\n        page : 0,\r\n        token : this.props.location.state.token,\r\n        code : 0,\r\n        message : '',\r\n        username : this.props.location.state.username\r\n      }\r\n\r\n      console.log(this.state.token);\r\n\r\n      Cookie.set('token', this.state.token, {expires : 1});\r\n    }\r\n\r\n    checkNumber(input){\r\n      return (input === \"1\" || input === \"2\" || input === \"3\" || input === \"4\" || input === \"5\" || input === \"6\" || input === \"7\" || input === \"8\" || input === \"9\" || input === \"0\");\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.setState({load : false, message : ''});\r\n\r\n      console.log(this.state.token);\r\n\r\n      let url = 'https://shrouded-cove-86222.herokuapp.com/https://api.stya.net/nim/'\r\n\r\n      if(this.checkNumber(this.state.query[0])){\r\n        url += 'byid?query=' + this.state.query \r\n      }\r\n      else{\r\n        url += 'byname?name=' + this.state.query\r\n      }\r\n\r\n      if(this.state.size > 0){\r\n        url += '&count=' + this.state.size\r\n      }\r\n\r\n      if(this.state.page > 0){\r\n        url += '&page=' + this.state.page\r\n      }\r\n\r\n      console.log(document.cookie)\r\n\r\n      const config = {\r\n        headers : {\r\n          'Auth-Token' : this.state.token\r\n        }\r\n      };\r\n\r\n      axios.get(url, config)\r\n      .then(result => { \r\n        console.log(result.data);\r\n        this.setState({\r\n          message : result.data.status,\r\n          code : result.data.code,\r\n          items : result.data.payload,\r\n          load : true\r\n        })\r\n      })\r\n    }\r\n  \r\n    updateQuery(event){\r\n      this.setState({query : event.target.value});\r\n    }\r\n\r\n    updateSize(event){\r\n      this.setState({size : event.target.value});\r\n    }\r\n\r\n    updatePage(event){\r\n      this.setState({page : event.target.value});\r\n    }\r\n    \r\n    render(){\r\n      var {load, items, code, token, username} = this.state;\r\n      \r\n      if(token === undefined || token === ''){\r\n        console.log(\"Redirect\");\r\n        return (<Redirect to= {{\r\n          pathname : '/login',\r\n          state : {message : 'invalid username or password.'}\r\n        }}\r\n        />);\r\n      }\r\n      else{\r\n        if(!load){\r\n          return (\r\n            \r\n            <div className=\"titlesec\">\r\n              <div className=\"hello\">Hello, {username}   |   <NavLink exact activeClassName=\"hello\" to=\"/login\">Logout</NavLink></div>\r\n\r\n              <div className=\"search\">\r\n                  <input className=\"querybar\" type=\"text\" name=\"query\" placeholder=\"Masukkan Nama/NIM\" onChange={this.updateQuery.bind(this)} />\r\n                  <input className=\"sizebar\" type=\"text\" name=\"size\" placeholder=\"Masukkan Jumlah\" onChange={this.updateSize.bind(this)} />\r\n                  <input className=\"pagebar\" type=\"text\" name=\"page\" placeholder=\"Masukkan Halaman\" onChange={this.updatePage.bind(this)} />\r\n                  <button className=\"btn\" onClick={this.handleSubmit}>Search</button>\r\n                </div>\r\n\r\n              <div className=\"queryStyle\">\r\n                Loading Data...\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        else{\r\n          if(code >= 0){\r\n            return (\r\n              <div className=\"titlesec\">\r\n                <div className=\"hello\">Hello, {username}   |   <NavLink exact activeClassName=\"hello\" to=\"/login\">Logout</NavLink></div>\r\n      \r\n                <div className=\"search\">\r\n                  <input className=\"querybar\" type=\"text\" name=\"query\" placeholder=\"Masukkan Nama/NIM\" onChange={this.updateQuery.bind(this)} />\r\n                  <input className=\"sizebar\" type=\"text\" name=\"size\" placeholder=\"Masukkan Jumlah\" onChange={this.updateSize.bind(this)} />\r\n                  <input className=\"pagebar\" type=\"text\" name=\"page\" placeholder=\"Masukkan Halaman\" onChange={this.updatePage.bind(this)} />\r\n                  <button className=\"btn\" onClick={this.handleSubmit}>Search</button>\r\n                </div>\r\n\r\n                  <DataTable data={items} />\r\n              </div>\r\n            );\r\n          }\r\n          else{\r\n            return (\r\n              <div className = \"titlesec\">\r\n                <div className=\"hello\">Hello, {username}   |   <NavLink exact activeClassName=\"hello\" to=\"/login\">Logout</NavLink></div>\r\n\r\n                <div className=\"search\">\r\n                  <input className=\"querybar\" type=\"text\" name=\"query\" placeholder=\"Masukkan Nama/NIM\" onChange={this.updateQuery.bind(this)} />\r\n                  <input className=\"sizebar\" type=\"text\" name=\"size\" placeholder=\"Masukkan Jumlah\" onChange={this.updateSize.bind(this)} />\r\n                  <input className=\"pagebar\" type=\"text\" name=\"page\" placeholder=\"Masukkan Halaman\" onChange={this.updatePage.bind(this)} />\r\n                  <button className=\"btn\" onClick={this.handleSubmit}>Search</button>\r\n                </div>\r\n\r\n\r\n                <div className = \"queryStyle\">\r\n                  <p>Cannot Load Data</p>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default GetData;\r\n  ","import React, {Component} from 'react';\r\n\r\nclass Error extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>404 Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport PostRegister from './component/PostRegister'\nimport PostLogin from './component/PostLogin'\nimport GetData from './component/GetData'\nimport Error from './component/Error'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className>\n          <div className=\"banner\">\n            <img src = \"https://github.com/SorrowInRain/agwar_nimfinder/blob/master/src/banner.png?raw=true\"></img>\n          </div>\n          <Switch>\n            <Route path=\"/\" exact component={GetData}/>\n            <Route path=\"/register\" exact component={PostRegister} />     \n            <Route path=\"/login\" exact component={PostLogin} />     \n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}